---
import { supabase } from '../../lib/supabase';
---

<script>
  import { supabase } from '../../lib/supabase';

  const handleAuthCallback = async () => {
    try {
      console.log('Iniciando callback de autenticación...');
      console.log('URL actual:', window.location.href);
      
      // Procesar la URL de callback de Supabase
      const { data, error } = await supabase.auth.getSession();
      
      if (error) {
        console.error('Error obteniendo sesión:', error);
        throw error;
      }
      
      console.log('Datos de sesión obtenidos:', data);
      
      if (!data.session) {
        console.error('No hay sesión activa');
        
        // Verificar si hay errores en la URL
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');
        const errorDescription = urlParams.get('error_description');
        
        if (error) {
          console.error('Error de OAuth:', error, errorDescription);
          alert(`Error de autenticación: ${error} - ${errorDescription}`);
        } else {
          alert('No se pudo completar la autenticación. Por favor intenta de nuevo.');
        }
        
        window.location.href = '/';
        return;
      }

      const session = data.session;
      console.log('Sesión encontrada:', session);
      console.log('Provider:', session.provider_refresh_token ? 'Discord' : 'Otro');

      // Si es login con Discord, intentar obtener datos adicionales
      if (session.provider_token && session.provider_refresh_token) {
        try {
          console.log('Obteniendo datos de Discord...');
          
          // Obtener datos de Discord
          const response = await fetch('https://discord.com/api/users/@me', {
            headers: {
              Authorization: `Bearer ${session.provider_token}`,
            },
          });

          if (!response.ok) {
            console.warn('No se pudo obtener datos de Discord, continuando sin ellos...');
            console.log('Response status:', response.status);
          } else {
            const discordData = await response.json();
            console.log('Datos de Discord obtenidos:', discordData);

            // Actualizar metadatos del usuario
            const { error: updateError } = await supabase.auth.updateUser({
              data: {
                ...session.user.user_metadata,
                discord_id: discordData.id,
                discord_username: discordData.username,
                discord_avatar: discordData.avatar ? `https://cdn.discordapp.com/avatars/${discordData.id}/${discordData.avatar}.png` : null,
                discord_connected: true,
                avatar_url: discordData.avatar ? `https://cdn.discordapp.com/avatars/${discordData.id}/${discordData.avatar}.png` : null
              }
            });

            if (updateError) {
              console.error('Error al actualizar metadatos:', updateError);
            } else {
              console.log('Metadatos actualizados correctamente');
            }
          }
        } catch (discordError) {
          console.warn('Error obteniendo datos de Discord:', discordError);
          // Continuar sin los datos de Discord
        }
      }

      console.log('Redirigiendo a la página principal...');
      window.location.href = '/';
      
    } catch (error) {
      console.error('Error en callback:', error);
      const errorMessage = error instanceof Error ? error.message : 'Error desconocido';
      alert('Error al conectar con Discord: ' + errorMessage);
      window.location.href = '/';
    }
  };

  handleAuthCallback();
</script>

<div class="min-h-screen flex items-center justify-center bg-wineblack">
  <div class="text-center">
    <h1 class="text-2xl text-white mb-4">Conectando tu cuenta...</h1>
    <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-redvelvet mx-auto"></div>
    <p class="text-neutral-gray mt-4">Por favor espera mientras procesamos tu autenticación</p>
  </div>
</div> 